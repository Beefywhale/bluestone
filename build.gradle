plugins {
    id 'java'
    id 'idea'
//    id 'scala'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id 'com.github.hierynomus.jython' version '0.6.0'
}

group 'com.khronodragon'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
archivesBaseName = 'bluestone'
mainClassName = 'com.khronodragon.bluestone.Start'

repositories {
    mavenCentral()
    jcenter()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Bluestone',
                'Implementation-Version': version,
                'Main-Class': 'com.khronodragon.bluestone.Start'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

dependencies {
//    compile 'org.scala-lang:scala-library:2.12.2'
//    compile 'org.scala-lang:scala-compiler:2.12.2'
    compile 'net.dv8tion:JDA:3.1.1_210'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.sedmelluq:lavaplayer:1.2.39'
    compile 'com.mashape.unirest:unirest-java:1.4.9'
    compile 'com.google.guava:guava:22.0'
    compile 'org.reflections:reflections:0.9.11'
    compile 'org.python:jython-standalone:2.7.1b3'
    compile 'org.slf4j:slf4j-simple:1.7.25'
    compile 'org.codehaus.groovy:groovy-jsr223:2.4.11'
//    compile 'org.luaj:luaj-jse:3.0.1'
//    compile 'org.jruby:jruby-complete:9.1.10.0'
}
/*
tasks.withType(ScalaCompile) {
    configure(scalaCompileOptions.forkOptions) {
        memoryMaximumSize = '1G'
        jvmArgs = ['-XX:MaxPermSize=512M']
    }
}
*/
compileJava.options.encoding = 'UTF-8'
// compileScala.options.encoding = 'UTF-8'
